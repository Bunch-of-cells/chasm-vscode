{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "chasm",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#keyword"
		},
		{
			"include": "#!register"
		},
		{
			"include": "#!number"
		},
		{
			"include": "#mprocessor"
		},
		{
			"include": "#label"
		},
		{
			"include": "#error"
		}
	],
	"repository": {
		"keyword": {
			"patterns": [
				{
					"name": "keyword.operator.chasm",
					"begin": "\\b(ADD|SUB|SUBFROM|AND|OR|XOR|SHL|SHR|RAND|ADDPTR|LOAD|DUMP|POINT|SET|SETDELAY|SETSOUND|SETPTRCHR|SETPTRDEC|GETKEY|GETDELAY)\\b",
					"end": "\n",
					"patterns": [
						{
							"name": "comment.line.chasm",
							"match": ";.*(?=\n)"
						},
						{
							"include": "#register"
						},
						{
							"include": "#number"
						},
						{
							"include": "#label"
						},
						{
							"include": "#error"
						}
					]
				},
				{
					"name": "keyword.control.chasm",
					"begin": "\\b(JMP|CALL|RET|JMPEQ|JMPNE|JMPEQKEY|JMPNEKEY|OFFJMP)\\b",
					"end": "\n",
					"patterns": [
						{
							"name": "comment.line.chasm",
							"match": ";.*(?=\n)"
						},
						{
							"include": "#register"
						},
						{
							"include": "#number"
						},
						{
							"include": "#label"
						},
						{
							"include": "#error"
						}
					]
				},
				{
					"name": "keyword.other.chasm",
					"begin": "\\b(CHIP|SYSCALL|CLR|DRAW)\\b",
					"end": "\n",
					"patterns": [
						{
							"name": "comment.line.chasm",
							"match": ";.*(?=\n)"
						},
						{
							"include": "#register"
						},
						{
							"include": "#number"
						},
						{
							"include": "#label"
						},
						{
							"include": "#error"
						}
					]
				}
			]
		},
		"mprocessor": {
			"begin": "%(#[\\+-]|\\?[#!\\|-]|!|\\+);",
			"end": "\n",
			"name": "constant.other.chasm",
			"contentName": "string.unquoted.chasm"
		},
		"comment": {
			"name": "comment.line.chasm",
			"begin": ";",
			"end": "\n"
		},
		"number": {
			"patterns": [
				{
					"name": "constant.numeric.chasm",
					"match": "\\b(0(d|D)[0-9]+|0(b|B)[01]+|0(x|X)[0-9a-fA-F]+|0(o|O)[0-7]+)\\b"
				},
				{
					"name": "invalid.illegal.chasm",
					"match": "\\b0(d|D|b|B|x|X|o|O)\\S*\\b"
				},
				{
					"name": "constant.numeric.chasm",
					"match": "\\b[0-9A-Fa-f]+\\b"
				},
				{
					"name": "invalid.illegal.chasm",
					"match": "\\b[0-9]\\S*\\b"
				}
			]
		},
		"!number": {
			"patterns": [
				{
					"name": "invalid.deprecated.chasm",
					"match": "\\b(0(d|D)[0-9]+|0(b|B)[01]+|0(x|X)[0-9a-fA-F]+|0(o|O)[0-7]+)\\b"
				},
				{
					"name": "invalid.illegal.chasm",
					"match": "\\b0(d|D|b|B|x|X|o|O)\\S*\\b"
				},
				{
					"name": "invalid.deprecated.chasm",
					"match": "\\b[0-9A-Fa-f]+\\b"
				},
				{
					"name": "invalid.illegal.chasm",
					"match": "\\b[0-9]\\S*\\b"
				}
			]
		},
		"register": {
			"name": "constant.language.chasm",
			"match": "\\b(v|V)[0-9a-fA-F]\\b"
		},
		"!register": {
			"name": "invalid.deprecated.chasm",
			"match": "\\b(v|V)[0-9a-fA-F]\\b"
		},
		"label": {
			"name": "entity.name.function.chasm",
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_\\-]*[a-zA-Z_]?):?"
		},
		"error": {
			"name": "invalid.illegal.chasm",
			"match": "\\S+"
		}
	},
	"scopeName": "source.chasm"
}